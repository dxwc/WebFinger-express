<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>
    <script src='vue.js'></script>
    <script src='axios.min.js'></script>
    <script src='validator.min.js'></script>
</head>
<body>
    <div id='root'>
        <form v-on:submit.prevent='get_user'>
            <input
                v-model='user_input'
                v-on:keydown='input_change'
                type='text'
                id='user'
                placeholder='user account lookup'
                required>
            <label v-if='is_email()'>on domain</label>
            <input
                v-if='is_email()'
                v-model='domain'
                type='text'
                id='domain'
                placeholder='domain'
            required>
            <button type='submit'>Find</button>
            <p v-show='form_warning.length'>{{ form_warning }}</p>
        </form>
        <h3 v-show='user_name.length'>{{ user_name }}</h3>
        <img v-show='profile_image.length' v-bind:src='profile_image'>
        <ul>
            <li v-show='user_id.length'>
                ID: <a v-bind:href='user_id'>{{ user_id }}</a>
            </li>
            <li v-show='inbox.length'>
                Inbox: <a v-bind:href='inbox'>{{ inbox }}</a>
            </li>
            <li v-show='outbox.length'>
                Outbox: <a v-bind:href='outbox'>{{ outbox }}</a>
            </li>
        </ul>
        <form v-if='inbox.length' v-on:submit.prevent='send_message'>
            <textarea v-model='message' placeholder='Send message'>
            </textarea>
            <button type='submit'>Send</button>
        </form>
    </div>
    <script>
        let app = new Vue
        ({
            el   : '#root',
            data :
            {
                user_input :  '',
                profile_image : '',
                user_name : '',
                user_id : '',
                inbox : '',
                outbox : '',
                form_warning : '',
                domain : '',
                message : ''
            },
            methods :
            {
                input_change : function()
                {
                    this.form_warning = '';
                    if(validator.isEmail(this.user_input))
                    {
                        this.domain = this.user_input.substr
                        (this.user_input.lastIndexOf('@')+1);
                    }
                },
                is_email()
                {
                    return validator.isEmail(this.user_input);
                },
                get_user : async function()
                {
                    this.profile_image = '';
                    this.user_name = '';
                    this.user_id = '';
                    this.inbox = '';
                    this.outbox = '';
                    this.form_warning = 'Getting information...';

                    if
                    (
                        !validator.isEmail(this.user_input) &&
                        !validator.isURL(this.user_input)
                    )
                    {
                        this.form_warning = 'Not a valid input';
                        return;
                    }

                    let res;
                    try
                    {
                        res = await axios.get(`/user/?q=${this.user_input}`);
                        res = res.data;
                        this.form_warning = 'Processing information...';
                    }
                    catch(err)
                    {
                        this.form_warning = 'Error retriving or no such user';
                    }

                    if(res)
                    {
                        try
                        {
                            this.profile_image = res.icon && res.icon.url ?
                                                    res.icon.url : '';
                            this.user_name = res.name ? res.name :
                                            res.preferredUsername ?
                                            res.preferredUsername : '';
                            this.user_id = res.id ? res.id : '';
                            this.inbox = res.inbox ? res.inbox : '';
                            this.outbox = res.outbox ? res.outbox : '';
                            this.form_warning = '';
                        }
                        catch(err)
                        {
                            this.form_warning = 'Error finding data in stream';
                        }
                    }
                },
                send_message : async function()
                {
                    if(this.inbox.length === 0)
                    {
                        this.form_warning = 'Must select user first';
                        return;
                    }
                    if(this.message.length === 0)
                    {
                        this.form_warning = 'Input must not be empty';
                        return;
                    }

                    this.form_warning = 'Attempting to send...';
                    let res;
                    try
                    {
                        res = await axios.post
                        (
                            '/send',
                            {
                                inbox : this.inbox,
                                message : this.message
                            }
                        );
                        res = res.data;
                        this.form_warning = 'Processing information...';
                        console.log(res.data);
                    }
                    catch(err)
                    {
                        console.error(err);
                        this.form_warning = 'Error sending';
                        return;
                    }
                }
            }
        });
    </script>
</body>
</html>